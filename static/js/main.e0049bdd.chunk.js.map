{"version":3,"sources":["audio/nothing mix adc _01.mp3","App.js","reportWebVitals.js","index.js"],"names":["App","useState","time","setTime","minutes","setMinutes","seconds","setSeconds","isOngoing","setIsOnGoing","useSound","music","play","stop","runInterval","useRef","useEffect","endTimer","Date","getTime","current","setInterval","currentTimer","countTimer","Math","floor","checkTimer","clearInterval","document","getElementById","value","className","id","type","placeholder","onChange","target","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"oOAAe,MAA0B,gD,OC8E1BA,MAzEf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,mBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAyBC,YAASC,GAAlC,mBAAOC,EAAP,KAAeC,EAAf,KAAeA,KACTC,EAAcC,iBAAO,MAE3BC,qBAAU,WACR,GAAIR,EAAW,CACb,IACMS,GADa,IAAIC,MAAOC,UACO,GAAPjB,EAAY,IAAO,IAEjDY,EAAYM,QAAUC,aAAY,WAChC,IAAIC,GAAe,IAAIJ,MAAOC,UAC1BI,EAAaN,EAAWK,EAC5BjB,GAAW,kBAAMmB,KAAKC,MAAMF,EAAa,KAAS,MAClDhB,GAAW,kBAAMiB,KAAKC,MAAMF,EAAa,KAAQ,MAGjDG,EAAWH,KACV,KAEL,OAAO,kBAAMI,cAAcb,EAAYM,YACtC,CAACZ,IAEJ,IAIMkB,EAAa,SAACxB,GACdA,EAAO,IACTyB,cAAcb,EAAYM,SAC1BN,EAAYM,QAAU,KACtBjB,EAAQ,GACRE,EAAW,GACXE,EAAW,GACXE,GAAa,GACbG,IACAgB,SAASC,eAAe,eAAeC,MAAQ,IAmBnD,OACE,sBAAKC,UAAU,MAAf,UACE,uBACEC,GAAG,cACHC,KAAK,SACLC,YAAY,eACZC,SAtCe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtBjC,EAAQiC,EAAON,UAuCb,wBAAQO,QAvBK,WACf5B,GAAa,IAsBX,iBACA,sCAAOL,EAAP,YAAkBE,KAClB,wBAAQ+B,QArBK,WACfV,cAAcb,EAAYM,SAC1BN,EAAYM,QAAU,KACtBjB,EAAQ,GACRE,EAAW,GACXE,EAAW,GACXE,GAAa,GACbI,IACAe,SAASC,eAAe,eAAeC,MAAQ,GAa7C,uBC7DSQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrB,SAASC,eAAe,SAM1BS,M","file":"static/js/main.e0049bdd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/nothing mix adc _01.22ba4f03.mp3\";","import \"./App.css\";\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport useSound from \"use-sound\"; //npm install use-sound\r\nimport music from \"./audio/nothing mix adc _01.mp3\";\r\n\r\nfunction App() {\r\n  const [time, setTime] = useState(0);\r\n  const [minutes, setMinutes] = useState(0);\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [isOngoing, setIsOnGoing] = useState(false);\r\n  const [play, { stop }] = useSound(music);\r\n  const runInterval = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (isOngoing) {\r\n      const startTimer = new Date().getTime();\r\n      const endTimer = startTimer + time * 60 * 1000 + 1000;\r\n\r\n      runInterval.current = setInterval(() => {\r\n        let currentTimer = new Date().getTime();\r\n        let countTimer = endTimer - currentTimer;\r\n        setMinutes(() => Math.floor(countTimer / 60000) % 60);\r\n        setSeconds(() => Math.floor(countTimer / 1000) % 60);\r\n\r\n        //if on time, play music\r\n        checkTimer(countTimer);\r\n      }, 1000);\r\n    }\r\n    return () => clearInterval(runInterval.current);\r\n  }, [isOngoing]);\r\n\r\n  const handleChange = ({ target }) => {\r\n    setTime(target.value);\r\n  };\r\n\r\n  const checkTimer = (time) => {\r\n    if (time < 0) {\r\n      clearInterval(runInterval.current);\r\n      runInterval.current = null;\r\n      setTime(0);\r\n      setMinutes(0);\r\n      setSeconds(0);\r\n      setIsOnGoing(false);\r\n      play();\r\n      document.getElementById(\"inputNumber\").value = 0;\r\n    }\r\n  };\r\n\r\n  const runTimer = () => {\r\n    setIsOnGoing(true);\r\n  };\r\n\r\n  const resetApp = () => {\r\n    clearInterval(runInterval.current);\r\n    runInterval.current = null;\r\n    setTime(0);\r\n    setMinutes(0);\r\n    setSeconds(0);\r\n    setIsOnGoing(false);\r\n    stop();\r\n    document.getElementById(\"inputNumber\").value = 0;\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <input\r\n        id=\"inputNumber\"\r\n        type=\"number\"\r\n        placeholder=\"Type minutes\"\r\n        onChange={handleChange}\r\n      />\r\n      <button onClick={runTimer}>Run</button>\r\n      <p>{`${minutes}:${seconds}`}</p>\r\n      <button onClick={resetApp}>Reset</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}