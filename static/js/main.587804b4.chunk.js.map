{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","time","setTime","className","type","placeholder","onChange","target","value","onClick","intervalid","setInterval","prev","clearInterval","window","open","location","reload","Math","floor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAkCeA,MA/Bf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAqBA,OACE,sBAAKC,UAAU,MAAf,UACE,uBAAOC,KAAK,SAASC,YAAY,eAAeC,SAN/B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtBL,EAAQK,EAAOC,UAMb,wBAAQC,QAtBK,WACf,IAAMC,EAAaC,aAAY,WAC7BT,GAAQ,SAACU,GACP,OAAIA,EAAO,GACM,GAAPA,EAAY,GAAK,IAEzBC,cAAcH,GACdI,OAAOC,KAAK,+BAAgC,UAC5CD,OAAOE,SAASC,SACT,QAGV,MAUD,iBACA,sCAAOC,KAAKC,MAAc,GAAPlB,EAAa,IAAhC,YAAuCiB,KAAKC,MAAc,GAAPlB,EAAa,WCjBvDmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.587804b4.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const [time, setTime] = useState(0);\n\n  const runTimer = () => {\n    const intervalid = setInterval(() => {\n      setTime((prev) => {\n        if (prev > 0) {\n          return (prev * 60 - 1) / 60;\n        } else {\n          clearInterval(intervalid);\n          window.open(\"https://youtu.be/kaf8PRNobYI\", \"_blank\");\n          window.location.reload();\n          return 0;\n        }\n      });\n    }, 1000);\n  };\n\n  const handleChange = ({ target }) => {\n    setTime(target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <input type=\"number\" placeholder=\"Type minutes\" onChange={handleChange} />\n      <button onClick={runTimer}>Run</button>\n      <p>{`${Math.floor((time * 60) / 60)}:${Math.floor((time * 60) % 60)}`}</p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}